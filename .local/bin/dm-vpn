#!/usr/bin/env bash
#
# script name: dm-vpn
# Description: Connect to VPN using dmenu
# Dependencies: dmenu, openvpn, sudo, systemd, Any Nerd Font

set -euo pipefail

# shellcheck disable=SC1091
source ./_dm-helper.sh 2>/dev/null || source _dm-helper.sh 2>/dev/null

source_dmscripts_configs

VPN_DIR="/etc/openvpn/client"
KILLSWITCH_UP="$VPN_DIR/up.sh"
KILLSWITCH_DOWN="$VPN_DIR/down.sh"

# Custom dmenu configuration (adjust for your build)
DMENU_FONT="Hack Nerd Font-12"
DMENU_COLORS="-nb #1E1E2E -nf #CDD6F4 -sb #89B4FA -sf #1E1E2E"

main() {
    # Get list of VPN configs with full error handling
    if [ ! -d "$VPN_DIR" ]; then
        notify-send "VPN Error" "Directory $VPN_DIR not found" --icon=network-error
        exit 1
    fi
    
    vpn_configs=$(find "$VPN_DIR" -name "*.ovpn" -print 2>/dev/null | sed 's|.*/||')
    
    if [ -z "$vpn_configs" ]; then
        notify-send "VPN Error" "No .ovpn files in $VPN_DIR" --icon=network-error
        exit 1
    fi

    # Force dmenu execution with visible parameters
    chosen=$(echo "$vpn_configs" | dmenu \
        -p "Select VPN ï€£ :" \
        -l 10 \
        -fn "$DMENU_FONT" \
        $DMENU_COLORS)

    echo "Selected: $chosen"  # Debug output
    
    if [ -z "$chosen" ]; then
        notify-send "VPN" "Selection cancelled" --icon=process-stop
        exit 0
    fi

    full_path="${VPN_DIR}/${chosen}"
    
    # Terminal execution with debug
    if ! alacritty -e sudo openvpn \
        --script-security 2 \
        --config "$full_path" \
        --up "$KILLSWITCH_UP" \
        --down "$KILLSWITCH_DOWN"; then
        notify-send "VPN Error" "Failed to launch terminal" --icon=terminal
        exit 1
    fi

    # Connection verification
    sleep 10
    if ping -q -c 2 -W 2 10.8.8.1 >/dev/null; then
        notify-send "VPN Connected" "Secure tunnel established" --icon=network-vpn
    else
        notify-send "VPN Failed" "Connection not active" --icon=network-error
    fi
}

# Force dmenu path (replace with your custom build location if needed)
export PATH="$HOME/.local/bin:$PATH"
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
